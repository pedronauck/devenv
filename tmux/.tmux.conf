# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -n 'M-Space' if-shell "$is_vim" 'send-keys M-Space' 'select-pane -t:.+'
bind-key -n 'M-h' select-pane -L
bind-key -n 'M-j' select-pane -D
bind-key -n 'M-k' select-pane -U
bind-key -n 'M-l' select-pane -R
bind-key -n 'M-\' select-pane -l
bind-key -n 'M-Space' select-pane -t:.+

bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -r" \; display-message "Copied to selection"
bind-key -T copy-mode-vi Y send-keys -X copy-pipe "xclip -r -selection clipboard" \; display-message "Copied to clipboard"
bind-key C-p run-shell "xclip -o | tmux load-buffer - && tmux paste-buffer"

bind -n M-z resize-pane -Z                            # Zoom pane
bind -n M-w kill-pane                                 # Close pane
bind -n M-+ resize-pane -U 10                         # Increase pane size
bind -n M-- resize-pane -D 10                         # Decrease pane size
bind -n M-| split-window -h                           # Split pane vertically
bind -n M-_ split-window -v                           # Split pane horizontally
bind -n M-r command-prompt -I "" "rename-window '%%'" # Rename window
bind -n M-t new-window                                # New window
bind -n M-q kill-window                               # New window
bind -n C-q detach                                    # Detach session
bind -n M-1 select-window -t 1                        # Go to window 1
bind -n M-2 select-window -t 2                        # Go to window 2
bind -n M-3 select-window -t 3                        # Go to window 3
bind -n M-4 select-window -t 4                        # Go to window 4
bind -n M-5 select-window -t 5                        # Go to window 5
bind -n M-6 select-window -t 6                        # Go to window 6
bind -n M-7 select-window -t 7                        # Go to window 7
bind -n M-8 select-window -t 8                        # Go to window 8
bind -n M-9 select-window -t 9                        # Go to window 9
bind -n M-c send-keys 'clear' C-m

# reload config file
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# Theme Config
set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha
set -g @catppuccin_window_tabs_enabled on
set -g @catppuccin_user "off"
set -g @catppuccin_host "off"

# Config
set -g status-position bottom
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g base-index 1
set -g pane-base-index 1

# turn mouse on
set -g mouse on
# restore vim sessions
# set -g @resurrect-strategy-vim 'session'
# restore neovim sessions
# set -g @resurrect-strategy-nvim 'session'
# restore panes
# set -g @resurrect-capture-pane-contents 'on'
# restore last saved environment (automatically)
# set -g @continuum-restore 'on'

set -g mode-keys vi
set -g status-keys vi

run '~/.tmux/plugins/tpm/tpm'
